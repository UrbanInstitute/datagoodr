[{"path":[]},{"path":"/articles/datagoodr-workflow.html","id":"step-0-loadsave-data","dir":"Articles","previous_headings":"Manual Steps","what":"Step 0: Load/Save Data","title":"datagoodr-workflow","text":"Load save data wish use. example.df data set csv saved datagoodr/data-dev/DEMO-DATA-SMALL.csv.","code":"data(\"example.df\", package = \"datagoodr\") # datafile is located at # system.file(\"example.df\", package = \"datagoodr\")"},{"path":"/articles/datagoodr-workflow.html","id":"step-1-create-the-dgf","dir":"Articles","previous_headings":"Manual Steps","what":"Step 1: Create the DGF","title":"datagoodr-workflow","text":"step inputs data file outputs DGF excel csv file. files can manually (iteratively) updated information want. goal DGF store “minimum” amount information render research guide without needed read raw data quarto document step 3. want create DGF default settings, run following code. Say want add detailed information DGF, descriptions variables, factor levels, etc. first define additional information want add. create DGF information.","code":"## create the DGF from just the data frame with no extra styling # this creates DGF-V1.csv and DGF-V1.xlsx create_dgf(example.df,            file = paste0(wd, \"DGF-V1\")) info <-   \"vname,dd_desc,data_type_convert,data_type_format\\n   F9_00_ORG_NAME_L1,Organization name line 1,NA,NA\\n   F0_00_ORG_CONTACT,Contact person (from IRS files),NA,NA\\n   F9_00_ORG_ADDR_L1,Organization street address line 1,NA,NA\\n   F9_00_ORG_ADDR_CITY,Organization city,NA,NA\\n   EIN,EIN,as.character,as_EIN\\n   SUBSECCD,IRS subsection code,NA,NA\\n   BMF_ACTIV1,IRS Activity Code 1,as.factor,NA\\n   NTMAJ12,NTEE major group (12),NA,NA\\n   NTEE1,NTEE major group,NA,NA\\n   NTEEFINAL,NA,as.factor,NA\\n   NTEESRC,NA,NA,NA\\n   DEDUCTCD,IRS Deductibility code,NA,NA\\n   OUTREAS,Reason why out of scope,as.factor,NA\\n   F9_05_UBIZ_IMCOME_OVER_LIMIT_X,\\\"Had unrelated business gross income of $1,000 or   more\\\",as.factor,NA\\n   OUTNCCS,Out of Scope flag,as.factor,NA\\n   COUNTY_FIPS,State + County FIPS code,NA,NA\\n   CEO_CENSUSTRACT,Census tract,NA,NA\\n   F9_00_TAX_PERIOD_END_DATE,Tax period end date,NA,as_yyyymm\\n   F9_00_TAX_PERIOD_END_DATE_PY,Tax period end date - prior year,NA,as_yyyymm\\n   F9_00_TAX_PERIOD_BEGIN_DATE,Tax period begin date,as.character,as_yyyymm\\n   F9_00_TAX_ACCPER,Tax period end date,NA,as_mm\\n   F9_08_REV_TOT_TOT,Total revenue - total,NA,NA\\n   F9_10_ASSET_TOT_BOY,Total assets - beginning of year,NA,NA\\n   F9_10_ASSET_TOT_EOY,Total assets - end of year,NA,NA\\n   F9_10_NAFB_TOT_BOY,Net assets or fund balances - beginning of year,NA,NA\\n   F9_09_EXP_TOT_TOT,Total functional expenses - total expenses,NA,NA\\n   F9_01_EXP_TOT_PY,Total expenses - prior year,NA,NA\\n\"  # cat(info) info <- readr::read_csv(info)  create_dgf(example.df,            vdesc = info$dd_desc,            vconvert = info$data_type_convert,            vformat = info$data_type_format,            file =  paste0(wd, \"DGF-V2\") )"},{"path":"/articles/datagoodr-workflow.html","id":"step-2-validate-the-dgf","dir":"Articles","previous_headings":"Manual Steps","what":"Step 2: Validate the DGF","title":"datagoodr-workflow","text":"step include many DGF validation steps R/02*.R files. currently operational. goal step validate column make sure format step 3 can handle.","code":""},{"path":"/articles/datagoodr-workflow.html","id":"step-3-render-the-rg","dir":"Articles","previous_headings":"Manual Steps","what":"Step 3: Render the RG","title":"datagoodr-workflow","text":"step inputs DGF made step 1 (validated step 2) renders datagoodr/inst/qmd-templates/RG.qmd file. file makes research guide PDF HTML file type current working directory. generating documentation data set one time, can stop . Step 4 5 need regularly update data, thus regularly update associated RG.","code":"# set the path to the most recent version of the DGF that you want to use # the path is relative to where the RG.qmd file is (sorry, this is mildly annoying) # so the correct file path for this example is... path_to_dgf <-\"../working-example/DGF-V2.xlsx\"   ## Then we render the quarto document (in the qmd-templates folder) quarto::quarto_render(   \"qmd-templates/RG.qmd\",   execute_params = list(dgf_file = path_to_dgf))  # The rendered versions should be in qmd-templates/RG.html and qmd-templates/RG.pdf"},{"path":"/articles/datagoodr-workflow.html","id":"step-4-refresh-the-dgf","dir":"Articles","previous_headings":"Manual Steps","what":"Step 4: Refresh the DGF","title":"datagoodr-workflow","text":"data set updated, step meant compare old data set new one. anything changed, DGF also updated. updating designed done rg_hash column DGF. hashing allows us check variable needs updated DGF without actually verifying individual entry. new data set variable, generate hash value. new hash value matches one rg_hash column old DGF, need update variable, great! new hash value match one rg_hash column old DGF, variable’s rg_[preview/properties/stats/graphics/hash] need updated.","code":""},{"path":"/articles/datagoodr-workflow.html","id":"step-5-customize","dir":"Articles","previous_headings":"Manual Steps","what":"Step 5: Customize","title":"datagoodr-workflow","text":"R/05*.R functions designed customization RG. templates, div arrangements, fonts, colors, “polishing” functions variables (dollarize monetary values).","code":""},{"path":"/articles/datagoodr-workflow.html","id":"wrapper-funtion","dir":"Articles","previous_headings":"","what":"Wrapper Funtion","title":"datagoodr-workflow","text":"built wrapper function creates project folder, runs Steps 1 3, documents actions log file. use wrapper function, run following code:","code":"datagoodr(   wd = getwd(), # specify the directory you want the project output to be in   folder.name = NULL, # specify the project folder name, default is datagoodr-TODAYS-DATE   location.data.raw <- system.file(\"example.df\", package = \"datagoodr\"), #filepath of rawdata set   create.dgf.params = list(use.df.types = FALSE, #list of parameters for DGF                            guess.factors = TRUE,                            guess.dates = FALSE,                            vdesc = info$dd_desc,                            vconvert = info$data_type_convert,                            vformat = info$data_type_format),   rg.name = \"test-research-guide\" )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Olivia Beck. Author. Jesse Lecy. Author, maintainer. Urban Inistitue National Center Charitable Statistics. Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beck O, Lecy J (2025). “datagoodr Package R.” https://urbaninstitute.github.io/datagoodr/.","code":"@Misc{,   title = {datagoodr Package for R},   author = {Olivia Beck and Jesse Lecy},   year = {2025},   url = {https://urbaninstitute.github.io/datagoodr/},   version = {v1.0.0-beta}, }"},{"path":"/index.html","id":"datagoodr","dir":"","previous_headings":"","what":"Gooder Data Means Gooder Research","title":"Gooder Data Means Gooder Research","text":"R package documenting profiling research datasets. Gooder data means gooder research. See Vignette manual wrapper function workflow.","code":""},{"path":"/index.html","id":"acronyms","dir":"","previous_headings":"","what":"Acronyms","title":"Gooder Data Means Gooder Research","text":"RG = Research Guide DGF = Data Governance File/Framework","code":""},{"path":"/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"Gooder Data Means Gooder Research","text":"datagoodr general work flow listed . See working-example/README.md instructions execute workflow current set .","code":""},{"path":"/index.html","id":"step-0-save-data-file-in-data-dev-directory","dir":"","previous_headings":"Workflow","what":"Step 0: Save data file in data-dev/ directory.","title":"Gooder Data Means Gooder Research","text":"Currently data-dev/DEMO-DATA-SMALL.csv good example.","code":""},{"path":"/index.html","id":"step-1-create-the-dgf","dir":"","previous_headings":"Workflow","what":"Step 1: Create the DGF","title":"Gooder Data Means Gooder Research","text":"step inputs data file Step 0 outputs DGF excel csv file. files can manually (iteratively) updated information want. goal DGF store “minimum” amount information render research guide without needed read raw data quarto document step 3. DGF generated, raw data longer needed generate RG. Data inside cell DGF generally stored JSON format.","code":""},{"path":"/index.html","id":"step-2-validate-the-dgf","dir":"","previous_headings":"Workflow","what":"Step 2: Validate the DGF","title":"Gooder Data Means Gooder Research","text":"step include many DGF validation steps R/02*.R files. currently operational. goal step validate column make sure format step 3 can process correctly.","code":""},{"path":"/index.html","id":"step-3-render-the-rg","dir":"","previous_headings":"Workflow","what":"Step 3: Render the RG","title":"Gooder Data Means Gooder Research","text":"step inputs DGF made step 1 (validated step 2) makes research guide PDF HTML file types. generating documentation data set one time, can stop . Step 4 5 need regularly update data, thus regularly update associated RG.","code":""},{"path":"/index.html","id":"step-4-refresh-the-dgf","dir":"","previous_headings":"Workflow","what":"Step 4: Refresh the DGF","title":"Gooder Data Means Gooder Research","text":"data set updated, step meant compare old data set new one. anything changed, DGF also updated. updating designed done rg_hash column DGF. hashing allows us check variable needs updated DGF without actually verifying individual entry. new data set variable, generate hash value. new hash value matches one rg_hash column old DGF, need update variable, great! new hash value match one rg_hash column old DGF, variable’s rg_[preview/properties/stats/graphics/hash] need updated.","code":""},{"path":"/index.html","id":"step-5-customize","dir":"","previous_headings":"Workflow","what":"Step 5: Customize","title":"Gooder Data Means Gooder Research","text":"R/05*.R functions designed customization RG. templates, div arrangements, fonts, colors, “polishing” functions variables (dollarize monetary values).","code":""},{"path":"/index.html","id":"current-file-structure","dir":"","previous_headings":"","what":"Current file structure;","title":"Gooder Data Means Gooder Research","text":"data/ contains .rda data files used datagoodr R package. data-dev/ contains data testing purposes DEMO-DATA-SMALL.CSV small data set used testing DGF-CORE-CO-2019-V1.xlsx template DGF looks like created hand serve example. DGF-CORE-CO-2019-blank.xlsx used datagoodr pipeline examples adding meta data variable. DGF.csv DGF.xlsx examples generated DGF Step 01 (see ) dev/ contains documentation work flow tasks still need done 03-work-flow.md describes workflow Step 3 (see ) data-type-funcs.md describes functions locations data type Steps 1 3 -.md list things still need addressed docs/ files pkgdown website DRAFT/ draft scripts inst/ CITATION citation file qmd-templates/RG.qmd RG Quarto document template used datagoodr wrapper funciton. man/ man files R package. pptx/ various powerpoints describing overall goals datagoodr package qmd-templates/ contains quarto documents templates final research guide qmd-templates-DRAFT/ contains draft files test-render/ contains testing scripts RG_files contains meta data updated RG.md rendered RG.qmd script generate research guide Step 3 RG.html, .html.md, .md, .pdf rendered RG R/ contains R scripts used datagoodr pipeline 00*.R scripts data files, utils funcitons, wrapper function. 01*.R scripts scripts used Step 1 02*.R scripts scripts used Step 2 03*.R scripts scripts used Step 3 04*.R scripts scripts used Step 4 05*.R scripts scripts used Step 5 vignettes/ includes code use datagoodr workflow manually datagoodr wrapper function. working-example/ contains scripts instructions working example datagoodr functions.","code":""},{"path":"/reference/apply_name_aliases.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — apply_name_aliases","title":"FUNCTION_TITLE — apply_name_aliases","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/apply_name_aliases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — apply_name_aliases","text":"","code":"apply_name_aliases(df, dgf)"},{"path":"/reference/apply_name_aliases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — apply_name_aliases","text":"df PARAM_DESCRIPTION dgf PARAM_DESCRIPTION","code":""},{"path":"/reference/apply_name_aliases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — apply_name_aliases","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/apply_name_aliases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — apply_name_aliases","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/apply_name_aliases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — apply_name_aliases","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/apply_raw_convert_fx.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — apply_raw_convert_fx","title":"FUNCTION_TITLE — apply_raw_convert_fx","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/apply_raw_convert_fx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — apply_raw_convert_fx","text":"","code":"apply_raw_convert_fx(df, dgf)"},{"path":"/reference/apply_raw_convert_fx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — apply_raw_convert_fx","text":"df PARAM_DESCRIPTION dgf PARAM_DESCRIPTION","code":""},{"path":"/reference/apply_raw_convert_fx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — apply_raw_convert_fx","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/apply_raw_convert_fx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — apply_raw_convert_fx","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/apply_raw_convert_fx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — apply_raw_convert_fx","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/check_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and standardize design element length — check_length","title":"Check and standardize design element length — check_length","text":"Ensures parsed design element correct length structure. three elements present, empty string appended fourth element. length four, error thrown.","code":""},{"path":"/reference/check_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and standardize design element length — check_length","text":"","code":"check_length(x)"},{"path":"/reference/check_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and standardize design element length — check_length","text":"x character vector representing parsed design element.","code":""},{"path":"/reference/check_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and standardize design element length — check_length","text":"named character vector length four names   `\"DIV\"`, `\"VNAME\"`, `\"LABEL\"`, `\"FUNCTION\"`.","code":""},{"path":"/reference/check_length.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and standardize design element length — check_length","text":"Used parse_design.","code":""},{"path":"/reference/create_all_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"Create sections for all variables in a DGF — create_all_sections","title":"Create sections for all variables in a DGF — create_all_sections","text":"Generates Quarto report sections variable provided DGF object. Uses layouts obtained [get_design()] content [dgf_to_list()].","code":""},{"path":"/reference/create_all_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create sections for all variables in a DGF — create_all_sections","text":"","code":"create_all_sections(dgf)"},{"path":"/reference/create_all_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create sections for all variables in a DGF — create_all_sections","text":"dgf DGF data frame","code":""},{"path":"/reference/create_all_sections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create sections for all variables in a DGF — create_all_sections","text":"return value; function writes formatted Quarto   content variable output.","code":""},{"path":"/reference/create_all_sections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create sections for all variables in a DGF — create_all_sections","text":"- Converts DGF data frame list variables using [dgf_to_list()]. - Retrieves design layouts [get_design()]. - Iterates variable name, calling [create_section()]   generate report section.","code":""},{"path":"/reference/create_dgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Data Guide File (DGF) from a data frame (internal) — create_dgf","title":"Create a Data Guide File (DGF) from a data frame (internal) — create_dgf","text":"Generates standardized Data Guide File (DGF) including variable names, labels, descriptions, data types, factor levels, conversion rules, summary statistics. Optionally reads CSV/Excel file filename provided instead data frame.","code":""},{"path":"/reference/create_dgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Data Guide File (DGF) from a data frame (internal) — create_dgf","text":"","code":"create_dgf(   df,   vtypes = NULL,   use.df.types = FALSE,   guess.factors = TRUE,   guess.dates = FALSE,   dd = NULL,   vname = NULL,   vlabel = NULL,   vdesc = NULL,   vtype = NULL,   vconvert = NULL,   vformat = NULL,   vname_alias = NULL,   keep.dd.cols = NULL,   preview_dd = F,   preview_dp = F,   file = \"DGF\" )"},{"path":"/reference/create_dgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Data Guide File (DGF) from a data frame (internal) — create_dgf","text":"df data frame generate DGF , character string specifying path CSV file. vtypes Optional named vector specifying variable types. use.df.types Logical; `TRUE`, preserves original data frame types. guess.factors Logical; `TRUE`, attempts convert character variables factors. guess.dates Logical; `TRUE`, attempts convert columns dates. dd Optional additional data dictionary information. vname, vlabel, vdesc, vtype, vconvert, vformat, vname_alias Optional vectors providing variable names, labels, descriptions, types, conversion functions, formats, aliases. keep.dd.cols Optional vector column names retain existing data dictionary. preview_dd, preview_dp Logical; controls previewing data dictionary data preview. file Character string specifying base name output files (without extension). Defaults `\"DGF\"`.","code":""},{"path":"/reference/create_dgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Data Guide File (DGF) from a data frame (internal) — create_dgf","text":"data frame representing Data Guide File (DGF)   metadata, statistics, summary information. DGF saved csv xlsx   files current working directory.","code":""},{"path":"/reference/create_dgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Data Guide File (DGF) from a data frame (internal) — create_dgf","text":"See dgf dgf.detailed data sets examples use funciton.","code":""},{"path":"/reference/create_div.html","id":null,"dir":"Reference","previous_headings":"","what":"Create all non-level-1 div section in markdown — create_div","title":"Create all non-level-1 div section in markdown — create_div","text":"Writes formatted `div` block quarto document. Format `div` block determined `.layouts` table.","code":""},{"path":"/reference/create_div.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create all non-level-1 div section in markdown — create_div","text":"","code":"create_div(div.num = \"div2\", all.layouts, xx)"},{"path":"/reference/create_div.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create all non-level-1 div section in markdown — create_div","text":".layouts output get_design xx defined global variable create_section. x Character string, label variable name include header. Defaults `\"vname\"`.","code":""},{"path":"/reference/create_div.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create all non-level-1 div section in markdown — create_div","text":"return value, called side effects (writes markdown text).","code":""},{"path":"/reference/create_div.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create all non-level-1 div section in markdown — create_div","text":"div name `x` included `.layouts`, nothing printed div quarto document.","code":""},{"path":"/reference/create_div1.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a level-1 div section in markdown — create_div1","title":"Create a level-1 div section in markdown — create_div1","text":"Writes formatted `div1` block quarto document. `div1` variable name variable types.","code":""},{"path":"/reference/create_div1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a level-1 div section in markdown — create_div1","text":"","code":"create_div1(x = \"vname\")"},{"path":"/reference/create_div1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a level-1 div section in markdown — create_div1","text":"x Character string, label variable name include header. Defaults `\"vname\"`.","code":""},{"path":"/reference/create_div1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a level-1 div section in markdown — create_div1","text":"return value, called side effects (writes markdown text).","code":""},{"path":"/reference/create_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a section for a variable — create_section","title":"Create a section for a variable — create_section","text":"Generates formatted section Quarto given variable. Uses layouts `.layouts` content `L` construct div blocks.","code":""},{"path":"/reference/create_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a section for a variable — create_section","text":"","code":"create_section(VNAME = \"EIN\", all.layouts, L)"},{"path":"/reference/create_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a section for a variable — create_section","text":"VNAME Character string, name variable create section . Defaults `\"EIN\"`. .layouts Output get_design(). L named list variable-specific content. `L[[VNAME]]` output `dgf_to_list( dgf )` `dgf` dgf data frame.","code":""},{"path":"/reference/create_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a section for a variable — create_section","text":"return value; function writes formatted Quarto content   output.","code":""},{"path":"/reference/create_section.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a section for a variable — create_section","text":"function sets `xx <<- L[[VNAME]]` global environment   downstream div functions access.","code":""},{"path":[]},{"path":"/reference/datagoodr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate DGF and RG — datagoodr","title":"Generate DGF and RG — datagoodr","text":"Run entire datagoodr workflow","code":""},{"path":"/reference/datagoodr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate DGF and RG — datagoodr","text":"","code":"datagoodr(   wd = getwd(),   folder.name = NULL,   path.raw.data,   create.dgf.params = NULL,   rg.name = \"research-guide\" )"},{"path":"/reference/datagoodr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate DGF and RG — datagoodr","text":"wd charterer string project output location. Default current working directory. folder.name character string folder project output put . Defaut \"datagoodr-TODAYSDATE\". path.raw.data character string absolute path raw dataset documented. File extension can .csv .xlsx. See data-dev/demo-data-small.csv example. create.dgf.params list function arguments creating dgf. See create_dgf available function arguments (df argument needed). Defaul NULL uses default arguments create_dgf. rg.name character string name final research guide output. Default \"research-guide\".","code":""},{"path":"/reference/datagoodr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate DGF and RG — datagoodr","text":"function outputs entire datagoodr workflow `wd` directory.","code":""},{"path":"/reference/datagoodr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate DGF and RG — datagoodr","text":"Run entire datagoodr workflow.....","code":""},{"path":"/reference/datagoodr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate DGF and RG — datagoodr","text":"","code":"if (FALSE) { ## Testing datagoor funciton library(datagoodr ) datagoodr(   wd = \"~/Desktop\",   folder.name = NULL,   location.data.raw = paste0(getwd(), \"/data-dev/DEMO-DATA-SMALL.csv\"),   create.dgf.params = list(use.df.types = FALSE,                            guess.factors = TRUE,                            guess.dates = FALSE),   rg.name = \"test-research-guide\" ) }"},{"path":"/reference/dgf.detailed.html","id":null,"dir":"Reference","previous_headings":"","what":"DGF Detailed — dgf.detailed","title":"DGF Detailed — dgf.detailed","text":"example generated DGF formatting options.","code":""},{"path":"/reference/dgf.detailed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DGF Detailed — dgf.detailed","text":"Result create_dgf example.df data using formatting options.","code":""},{"path":"/reference/dgf.detailed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DGF Detailed — dgf.detailed","text":"data set generated using code example section help file. See datagoodr/working-example/README.md details dgf created. See datagoodr/R/02-02-ingest-utils.R non base R functions `info$data_type_format` example .","code":""},{"path":"/reference/dgf.detailed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DGF Detailed — dgf.detailed","text":"","code":"if (FALSE) { data(df)  # Add additional info for formatting info <- \"vname,dd_desc,data_type_convert,data_type_format\\n   F9_00_ORG_NAME_L1,Organization name line 1,NA,NA\\n   F0_00_ORG_CONTACT,Contact person (from IRS files),NA,NA\\n   F9_00_ORG_ADDR_L1,Organization street address line 1,NA,NA\\n   F9_00_ORG_ADDR_CITY,Organization city,NA,NA\\n   EIN,EIN,as.character,as_EIN\\n   SUBSECCD,IRS subsection code,NA,NA\\n   BMF_ACTIV1,IRS Activity Code 1,as.factor,NA\\n   NTMAJ12,NTEE major group (12),NA,NA\\n   NTEE1,NTEE major group,NA,NA\\n   NTEEFINAL,NA,as.factor,NA\\n   NTEESRC,NA,NA,NA\\n   DEDUCTCD,IRS Deductibility code,NA,NA\\n   OUTREAS,Reason why out of scope,as.factor,NA\\n   F9_05_UBIZ_IMCOME_OVER_LIMIT_X,\\\"Had unrelated business gross income of $1,000 or more\\\",as.factor,NA\\n   OUTNCCS,Out of Scope flag,as.factor,NA\\n   COUNTY_FIPS,State + County FIPS code,NA,NA\\n   CEO_CENSUSTRACT,Census tract,NA,NA\\n   F9_00_TAX_PERIOD_END_DATE,Tax period end date,NA,as_yyyymm\\n   F9_00_TAX_PERIOD_END_DATE_PY,Tax period end date - prior year,NA,as_yyyymm\\n   F9_00_TAX_PERIOD_BEGIN_DATE,Tax period begin date,as.character,as_yyyymm\\n   F9_00_TAX_ACCPER,Tax period end date,NA,as_mm\\n   F9_08_REV_TOT_TOT,Total revenue - total,NA,NA\\n   F9_10_ASSET_TOT_BOY,Total assets - beginning of year,NA,NA\\n   F9_10_ASSET_TOT_EOY,Total assets - end of year,NA,NA\\n   F9_10_NAFB_TOT_BOY,Net assets or fund balances - beginning of year,NA,NA\\n   F9_09_EXP_TOT_TOT,Total functional expenses - total expenses,NA,NA\\n   F9_01_EXP_TOT_PY,Total expenses - prior year,NA,NA\\n\"  cat(info) info <- readr::read_csv(info)  create_dgf(df,            vdesc = info$dd_desc,            vconvert = info$data_type_convert,            vformat = info$data_type_format,            file = \"dgf-detailed\") }"},{"path":"/reference/dgf.html","id":null,"dir":"Reference","previous_headings":"","what":"DGF Default — dgf","title":"DGF Default — dgf","text":"example generated DGF default options.","code":""},{"path":"/reference/dgf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DGF Default — dgf","text":"Result create_dgf example.df data.","code":""},{"path":"/reference/dgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DGF Default — dgf","text":"data set generated using code example section help file.","code":""},{"path":"/reference/dgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DGF Default — dgf","text":"","code":"if (FALSE) { data(df) create_dgf(df, file = \"dgf\") }"},{"path":"/reference/dollarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numeric Values as Dollar Amounts — dollarize","title":"Format Numeric Values as Dollar Amounts — dollarize","text":"function formats numeric values dollar amounts rounding nearest whole number, adding commas thousand separators, prefixing dollar sign.","code":""},{"path":"/reference/dollarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numeric Values as Dollar Amounts — dollarize","text":"","code":"dollarize(x)"},{"path":"/reference/dollarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numeric Values as Dollar Amounts — dollarize","text":"x numeric vector formatted.","code":""},{"path":"/reference/dollarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numeric Values as Dollar Amounts — dollarize","text":"character vector formatted dollar amounts.","code":""},{"path":"/reference/dollarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numeric Values as Dollar Amounts — dollarize","text":"","code":"dollarize(1234567.89) # Returns \"$1,234,568\" #> [1] \"$1,234,568\" dollarize(c(1000, 2500.75, 999999.99)) # Returns c(\"$1,000\", \"$2,501\", \"$1,000,000\") #> [1] \"$1,000\"     \"$2,501\"     \"$1,000,000\""},{"path":"/reference/example.df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example IRS990 Data Set — example.df","title":"Example IRS990 Data Set — example.df","text":"toy example IRS990 data documented datagoodr","code":""},{"path":"/reference/example.df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example IRS990 Data Set — example.df","text":"data frame 25,000 rows 27 variables: F9_00_ORG_NAME_L1 Organization name line 1 F0_00_ORG_CONTACT Contact person (IRS files) F9_00_ORG_ADDR_L1 Organization street address line 1 F9_00_ORG_ADDR_CITY Organization city EIN EIN SUBSECCD IRS subsection code BMF_ACTIV1 IRS Activity Code 1 NTMAJ12 NTEE major group (12) NTEE1 NTEE major group NTEEFINAL NA NTEESRC NA DEDUCTCD IRS Deductibility code OUTREAS Reason scope F9_05_UBIZ_IMCOME_OVER_LIMIT_X unrelated business gross income \\$1,000 OUTNCCS Scope flag COUNTY_FIPS State + County FIPS code CEO_CENSUSTRACT Census tract F9_00_TAX_PERIOD_END_DATE Tax period end date F9_00_TAX_PERIOD_END_DATE_PY Tax period end date - prior year F9_00_TAX_PERIOD_BEGIN_DATE Tax period begin date F9_00_TAX_ACCPER Tax period end date F9_08_REV_TOT_TOT Total revenue - total F9_10_ASSET_TOT_BOY Total assets - beginning year F9_10_ASSET_TOT_EOY Total assets - end year F9_10_NAFB_TOT_BOY Net assets fund balances - beginning year F9_09_EXP_TOT_TOT Total functional expenses - total expenses F9_01_EXP_TOT_PY Total expenses - prior year","code":""},{"path":"/reference/example.df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example IRS990 Data Set — example.df","text":"See https://nonprofit-open-data-collective.github.io/irs990efile/data-dictionary/data-dictionary.html full data dictionary.","code":""},{"path":"/reference/first_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Format the First N Unique Values from a Vector — first_n","title":"Extract and Format the First N Unique Values from a Vector — first_n","text":"function extracts first N unique, non-missing values vector, formats appropriately, returns truncated character string.","code":""},{"path":"/reference/first_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Format the First N Unique Values from a Vector — first_n","text":"","code":"first_n(x, n = 5)"},{"path":"/reference/first_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Format the First N Unique Values from a Vector — first_n","text":"x vector type (numeric, character, factor, Date). n integer specifying number unique values return. Defaults 5.","code":""},{"path":"/reference/first_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Format the First N Unique Values from a Vector — first_n","text":"formatted character string containing first N unique values `x`, separated \" ;; \". `x` numeric, values rounded three decimal places. `x` contains factors dates, converted character strings.","code":""},{"path":[]},{"path":"/reference/first_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Format the First N Unique Values from a Vector — first_n","text":"","code":"first_n(c(\"apple\", \"banana\", \"cherry\", \"date\", \"elderberry\", \"fig\"), 3) #> [1] \"apple ;; \\nbanana ;; \\ncherry\" first_n(c(1.234567, 2.345678, 3.456789), 2) #> [1] \"1.235 ;; \\n2.346\" first_n(as.Date(c(\"2021-01-01\", \"2021-02-01\", \"2021-03-01\")), 2) #> [1] \"2021-01-01 ;; \\n2021-02-01\""},{"path":"/reference/get_class_df.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — get_class_df","title":"FUNCTION_TITLE — get_class_df","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/get_class_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — get_class_df","text":"","code":"get_class_df(df)"},{"path":"/reference/get_class_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — get_class_df","text":"df PARAM_DESCRIPTION","code":""},{"path":"/reference/get_class_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — get_class_df","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/get_class_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — get_class_df","text":"DETAILS","code":""},{"path":"/reference/get_class_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — get_class_df","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/get_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize design for each section — get_design","title":"Initialize design for each section — get_design","text":"Finds objects global environment names matching `\"layout.\"`, parses [parse_design()], combines single data frame `TYPE` column derived object name.","code":""},{"path":"/reference/get_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize design for each section — get_design","text":"","code":"get_design()"},{"path":"/reference/get_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize design for each section — get_design","text":"data frame containing compiled layout designs   associated type.","code":""},{"path":"/reference/get_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize design for each section — get_design","text":"Used create_all_sections","code":""},{"path":[]},{"path":"/reference/get_dupes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and Print Duplicate Variables in a Data Frame — get_dupes","title":"Identify and Print Duplicate Variables in a Data Frame — get_dupes","text":"function checks duplicate variables data frame based provided hash vector. prints names duplicate variables returns logical vector indicating rows duplicates.","code":""},{"path":"/reference/get_dupes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and Print Duplicate Variables in a Data Frame — get_dupes","text":"","code":"get_dupes(df, vhash)"},{"path":"/reference/get_dupes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and Print Duplicate Variables in a Data Frame — get_dupes","text":"df data frame containing variables checked duplicates. vhash vector hash values corresponding variable data frame. typically computed using hashing function like `rlang::hash()`.","code":""},{"path":"/reference/get_dupes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and Print Duplicate Variables in a Data Frame — get_dupes","text":"logical vector indicating variables duplicates.","code":""},{"path":"/reference/get_dupes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify and Print Duplicate Variables in a Data Frame — get_dupes","text":"","code":"if (FALSE) { vhash <- sapply(df, rlang::hash)  # Generate hash values for variables get_dupes(df, vhash)  # Identify and print duplicate variables }"},{"path":"/reference/get_graphics.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Graphics Based on Variable Type — get_graphics","title":"Generate Graphics Based on Variable Type — get_graphics","text":"Generates needed graphics rg_graphics column DGF. Used inside R/01-00-CREATE-DGF.R","code":""},{"path":"/reference/get_graphics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Graphics Based on Variable Type — get_graphics","text":"","code":"get_graphics(VNAME, df, VCLASS)"},{"path":"/reference/get_graphics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Graphics Based on Variable Type — get_graphics","text":"VNAME character string specifying name variable data frame. (vname column DGF) df data frame containing variable visualized. VCLASS character string indicating class variable (e.g., \"numeric\", \"factor\", \"logical\", ).","code":""},{"path":"/reference/get_graphics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Graphics Based on Variable Type — get_graphics","text":"Data table JSON text string needed store DGF later generate appropriate plot rendering RG.","code":""},{"path":"/reference/get_graphics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Graphics Based on Variable Type — get_graphics","text":"function calls different helper functions based `VCLASS`: `\"numeric\"`: Calls `get_graphics_num(VNAME, df)` `\"factor\"`: Calls `get_graphics_fact(VNAME, df)` `\"logical\"`: Calls `get_graphics_log(VNAME, df)` classes: Calls `get_graphics_chr(VNAME, df)`","code":""},{"path":"/reference/get_json_error.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — get_json_error","title":"FUNCTION_TITLE — get_json_error","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/get_json_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — get_json_error","text":"","code":"get_json_error(x)"},{"path":"/reference/get_json_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — get_json_error","text":"x PARAM_DESCRIPTION","code":""},{"path":"/reference/get_json_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — get_json_error","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/get_json_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — get_json_error","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/get_json_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — get_json_error","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/get_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — get_levels","title":"FUNCTION_TITLE — get_levels","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/get_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — get_levels","text":"","code":"get_levels(f)"},{"path":"/reference/get_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — get_levels","text":"f PARAM_DESCRIPTION","code":""},{"path":"/reference/get_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — get_levels","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/get_levels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — get_levels","text":"DETAILS","code":""},{"path":"/reference/get_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — get_levels","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/get_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Table of Properties — get_properties","title":"Generate Table of Properties — get_properties","text":"Generates needed properties rg_properties column DGF. Used inside R/01-00-CREATE-DGF.R","code":""},{"path":"/reference/get_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Table of Properties — get_properties","text":"","code":"get_properties(VNAME, df)"},{"path":"/reference/get_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Table of Properties — get_properties","text":"VNAME character string specifying name variable data frame. (vname column DGF) df data frame containing variable visualized.","code":""},{"path":"/reference/get_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Table of Properties — get_properties","text":"Data table JSON text string needed store DGF later generate properties table rendering RG.","code":""},{"path":"/reference/get_properties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Table of Properties — get_properties","text":"properties include number rows distinct values, common value, number zero, empty cells, missing/NA cells, cell infinite values","code":""},{"path":"/reference/get_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Statistics Based on Variable Type — get_stats","title":"Generate Statistics Based on Variable Type — get_stats","text":"Generates needed graphics rg_stats column DGF. Used inside R/01-00-CREATE-DGF.R","code":""},{"path":"/reference/get_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Statistics Based on Variable Type — get_stats","text":"","code":"get_stats(VNAME, df, VCLASS)"},{"path":"/reference/get_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Statistics Based on Variable Type — get_stats","text":"VNAME character string specifying name variable data frame. (vname column DGF) df data frame containing variable visualized. VCLASS character string indicating class variable (e.g., \"numeric\", \"factor\", \"logical\", ).","code":""},{"path":"/reference/get_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Statistics Based on Variable Type — get_stats","text":"Data table JSON text string needed store DGF later generate appropriate plot rendering RG.","code":""},{"path":"/reference/get_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Statistics Based on Variable Type — get_stats","text":"function calls different helper functions based `VCLASS`: `\"numeric\"`: Calls `get_graphics_num(VNAME, df)` `\"factor\"`: Calls `get_graphics_fact(VNAME, df)` `\"logical\"`: Calls `get_graphics_log(VNAME, df)` classes: Calls `get_graphics_chr(VNAME, df)`","code":""},{"path":"/reference/ingest_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — ingest_raw","title":"FUNCTION_TITLE — ingest_raw","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/ingest_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — ingest_raw","text":"","code":"ingest_raw(df, path = NULL)"},{"path":"/reference/ingest_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — ingest_raw","text":"df PARAM_DESCRIPTION path PARAM_DESCRIPTION, Default: NULL","code":""},{"path":"/reference/ingest_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — ingest_raw","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/ingest_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — ingest_raw","text":"DETAILS","code":""},{"path":"/reference/ingest_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — ingest_raw","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/is_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — is_factor","title":"FUNCTION_TITLE — is_factor","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/is_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — is_factor","text":"","code":"is_factor(   x,   unique.p = 0.05,   unique.n = 100,   top.n = 25,   max.variance = 2,   b.to.f = FALSE )"},{"path":"/reference/is_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — is_factor","text":"x PARAM_DESCRIPTION unique.p PARAM_DESCRIPTION, Default: 0.05 unique.n PARAM_DESCRIPTION, Default: 100 top.n PARAM_DESCRIPTION, Default: 25 max.variance PARAM_DESCRIPTION, Default: 2 b..f PARAM_DESCRIPTION, Default: FALSE","code":""},{"path":"/reference/is_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — is_factor","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/is_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — is_factor","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/is_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — is_factor","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/is_factor_df.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — is_factor_df","title":"FUNCTION_TITLE — is_factor_df","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/is_factor_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — is_factor_df","text":"","code":"is_factor_df(df)"},{"path":"/reference/is_factor_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — is_factor_df","text":"df PARAM_DESCRIPTION","code":""},{"path":"/reference/is_factor_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — is_factor_df","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/is_factor_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — is_factor_df","text":"DETAILS","code":""},{"path":"/reference/is_factor_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — is_factor_df","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/is_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check missing data — is_missing","title":"Check missing data — is_missing","text":"internal function get_properties return amount missing data","code":""},{"path":"/reference/is_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check missing data — is_missing","text":"","code":"is_missing(x)"},{"path":"/reference/is_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check missing data — is_missing","text":"x vector","code":""},{"path":"/reference/is_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check missing data — is_missing","text":"number missing values `x`","code":""},{"path":"/reference/is_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check missing data — is_missing","text":"internal function get_properties","code":""},{"path":"/reference/jsonify_f.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — jsonify_f","title":"FUNCTION_TITLE — jsonify_f","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/jsonify_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — jsonify_f","text":"","code":"jsonify_f(f)"},{"path":"/reference/jsonify_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — jsonify_f","text":"f PARAM_DESCRIPTION","code":""},{"path":"/reference/jsonify_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — jsonify_f","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/jsonify_f.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — jsonify_f","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/jsonify_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — jsonify_f","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/load_dgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Load DGF from DGF Excel Sheet — load_dgf","title":"Load DGF from DGF Excel Sheet — load_dgf","text":"function reads DGF Excel file returns contents \"DGF\" sheet data frame.","code":""},{"path":"/reference/load_dgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load DGF from DGF Excel Sheet — load_dgf","text":"","code":"load_dgf(filename = \"DGF.xlsx\")"},{"path":"/reference/load_dgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load DGF from DGF Excel Sheet — load_dgf","text":"filename character string specifying name Excel file read. Defaults `\"DGF.xlsx\"`.","code":""},{"path":"/reference/load_dgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load DGF from DGF Excel Sheet — load_dgf","text":"data frame containing data \"DGF\" sheet specified Excel file.","code":""},{"path":"/reference/log_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a message to a log file (and optionally the console) — log_message","title":"Write a message to a log file (and optionally the console) — log_message","text":"Appends timestamped message log file. default, message also printed console immediate feedback.","code":""},{"path":"/reference/log_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a message to a log file (and optionally the console) — log_message","text":"","code":"log_message(message, logfile = \"datagoodr.txt\", console = TRUE)"},{"path":"/reference/log_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a message to a log file (and optionally the console) — log_message","text":"message character string. message log. logfile character string giving path log file. Defaults `\"my_log.txt\"`. console Logical. message also printed console? Defaults `TRUE`.","code":""},{"path":"/reference/log_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a message to a log file (and optionally the console) — log_message","text":"Invisibly returns log line written (character string).   Used side effects (writing file printing).","code":""},{"path":"/reference/most_common_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Most common value — most_common_val","title":"Most common value — most_common_val","text":"Internal function get_properties find common value.","code":""},{"path":"/reference/most_common_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Most common value — most_common_val","text":"","code":"most_common_val(x)"},{"path":"/reference/most_common_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Most common value — most_common_val","text":"x vector","code":""},{"path":"/reference/most_common_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Most common value — most_common_val","text":"common value `x`","code":""},{"path":"/reference/most_common_val.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Most common value — most_common_val","text":"internal function get_properties","code":""},{"path":"/reference/parse_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse design strings into a data frame — parse_design","title":"Parse design strings into a data frame — parse_design","text":"function parses character string (vector strings) containing fields separated `;;` tidy data frame. trims whitespace, checks element lengths `check_length()`, binds parsed rows together.","code":""},{"path":"/reference/parse_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse design strings into a data frame — parse_design","text":"","code":"parse_design(x)"},{"path":"/reference/parse_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse design strings into a data frame — parse_design","text":"x character vector, element contains values separated `;;`.","code":""},{"path":"/reference/parse_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse design strings into a data frame — parse_design","text":"data frame, input string split fields   represented row.","code":""},{"path":"/reference/parse_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse design strings into a data frame — parse_design","text":"Used inside get_design.","code":""},{"path":[]},{"path":"/reference/parse_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — parse_functions","title":"FUNCTION_TITLE — parse_functions","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/parse_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — parse_functions","text":"","code":"parse_functions(raw_convert)"},{"path":"/reference/parse_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — parse_functions","text":"raw_convert PARAM_DESCRIPTION","code":""},{"path":"/reference/parse_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — parse_functions","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/parse_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — parse_functions","text":"DETAILS","code":""},{"path":"/reference/parse_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — parse_functions","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/parse_nm.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — parse_nm","title":"FUNCTION_TITLE — parse_nm","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/parse_nm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — parse_nm","text":"","code":"parse_nm(x)"},{"path":"/reference/parse_nm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — parse_nm","text":"x PARAM_DESCRIPTION","code":""},{"path":"/reference/parse_nm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — parse_nm","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/parse_nm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — parse_nm","text":"DETAILS","code":""},{"path":"/reference/parse_nm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — parse_nm","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/paste_booleplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Graphics of a Logical Variable into RG — paste_booleplot","title":"Print Graphics of a Logical Variable into RG — paste_booleplot","text":"Read rg_graphics column DGF print Booleplot RG","code":""},{"path":"/reference/paste_booleplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Graphics of a Logical Variable into RG — paste_booleplot","text":"","code":"paste_booleplot(VNAME, LABEL = \"BAR PLOT\")"},{"path":"/reference/paste_booleplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Graphics of a Logical Variable into RG — paste_booleplot","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"BAR PLOT\"`.","code":""},{"path":"/reference/paste_booleplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Graphics of a Logical Variable into RG — paste_booleplot","text":"function return value; prints formatted Booleplot RG","code":""},{"path":"/reference/paste_booleplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Graphics of a Logical Variable into RG — paste_booleplot","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Graphics of a Numeric Variable into RG — paste_histogram","title":"Print Graphics of a Numeric Variable into RG — paste_histogram","text":"Read rg_graphics column DGF print histogram RG","code":""},{"path":"/reference/paste_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Graphics of a Numeric Variable into RG — paste_histogram","text":"","code":"paste_histogram(VNAME, LABEL = \"HISTOGRAM\")"},{"path":"/reference/paste_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Graphics of a Numeric Variable into RG — paste_histogram","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"HISTOGRAM\"`.","code":""},{"path":"/reference/paste_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Graphics of a Numeric Variable into RG — paste_histogram","text":"function return value; prints formatted histogram RG","code":""},{"path":"/reference/paste_histogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Graphics of a Numeric Variable into RG — paste_histogram","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_preview_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Preview of a Character Variable into RG — paste_preview_chr","title":"Print Preview of a Character Variable into RG — paste_preview_chr","text":"Read rg_preview column DGF print preview table RG","code":""},{"path":"/reference/paste_preview_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Preview of a Character Variable into RG — paste_preview_chr","text":"","code":"paste_preview_chr(VNAME, LABEL = \"PREVIEW\")"},{"path":"/reference/paste_preview_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Preview of a Character Variable into RG — paste_preview_chr","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"PREVIEW\"`.","code":""},{"path":"/reference/paste_preview_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Preview of a Character Variable into RG — paste_preview_chr","text":"function return value; prints formatted table RG html code","code":""},{"path":"/reference/paste_preview_chr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Preview of a Character Variable into RG — paste_preview_chr","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_preview_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Preview of a Numeric Variable into RG — paste_preview_num","title":"Print Preview of a Numeric Variable into RG — paste_preview_num","text":"Read rg_preview column DGF print preview table RG","code":""},{"path":"/reference/paste_preview_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Preview of a Numeric Variable into RG — paste_preview_num","text":"","code":"paste_preview_num(VNAME, LABEL = \"STATS\")"},{"path":"/reference/paste_preview_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Preview of a Numeric Variable into RG — paste_preview_num","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"PREVIEW\"`.","code":""},{"path":"/reference/paste_preview_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Preview of a Numeric Variable into RG — paste_preview_num","text":"function return value; prints formatted table RG html code","code":""},{"path":"/reference/paste_preview_num.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Preview of a Numeric Variable into RG — paste_preview_num","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Properties of a Variable into RG — paste_properties","title":"Print Properties of a Variable into RG — paste_properties","text":"Read rg_properties column DGF print properties table RG","code":""},{"path":"/reference/paste_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Properties of a Variable into RG — paste_properties","text":"","code":"paste_properties(VNAME, LABEL = \"PROPERTIES\")"},{"path":"/reference/paste_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Properties of a Variable into RG — paste_properties","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"PROPERTIES\"`.","code":""},{"path":"/reference/paste_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Properties of a Variable into RG — paste_properties","text":"function return value; prints formatted table RG html code","code":""},{"path":"/reference/paste_properties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Properties of a Variable into RG — paste_properties","text":"function internal function create_div R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_stats_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Statistic of a Character Variable into RG — paste_stats_chr","title":"Print Statistic of a Character Variable into RG — paste_stats_chr","text":"Read rg_stats column DGF print statistics table RG","code":""},{"path":"/reference/paste_stats_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Statistic of a Character Variable into RG — paste_stats_chr","text":"","code":"paste_stats_chr(VNAME, LABEL = \"STATS\")"},{"path":"/reference/paste_stats_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Statistic of a Character Variable into RG — paste_stats_chr","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"STATS\"`.","code":""},{"path":"/reference/paste_stats_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Statistic of a Character Variable into RG — paste_stats_chr","text":"function return value; prints formatted table RG html code","code":""},{"path":"/reference/paste_stats_chr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Statistic of a Character Variable into RG — paste_stats_chr","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_stats_fact.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Statistic of a Factor Variable into RG — paste_stats_fact","title":"Print Statistic of a Factor Variable into RG — paste_stats_fact","text":"Read rg_stats column DGF print statistics table RG","code":""},{"path":"/reference/paste_stats_fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Statistic of a Factor Variable into RG — paste_stats_fact","text":"","code":"paste_stats_fact(VNAME, LABEL = \"STATS\")"},{"path":"/reference/paste_stats_fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Statistic of a Factor Variable into RG — paste_stats_fact","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"STATS\"`.","code":""},{"path":"/reference/paste_stats_fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Statistic of a Factor Variable into RG — paste_stats_fact","text":"function return value; prints formatted table RG html code","code":""},{"path":"/reference/paste_stats_fact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Statistic of a Factor Variable into RG — paste_stats_fact","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_stats_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Statistic of a Logical Variable into RG — paste_stats_log","title":"Print Statistic of a Logical Variable into RG — paste_stats_log","text":"Read rg_stats column DGF print statistics table RG","code":""},{"path":"/reference/paste_stats_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Statistic of a Logical Variable into RG — paste_stats_log","text":"","code":"paste_stats_log(VNAME, LABEL = \"STATS\")"},{"path":"/reference/paste_stats_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Statistic of a Logical Variable into RG — paste_stats_log","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"STATS\"`.","code":""},{"path":"/reference/paste_stats_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Statistic of a Logical Variable into RG — paste_stats_log","text":"function return value; prints formatted table RG html code","code":""},{"path":"/reference/paste_stats_log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Statistic of a Logical Variable into RG — paste_stats_log","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_stats_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Statistic of a Numeric Variable into RG — paste_stats_num","title":"Print Statistic of a Numeric Variable into RG — paste_stats_num","text":"Read rg_stats column DGF print statistics table RG","code":""},{"path":"/reference/paste_stats_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Statistic of a Numeric Variable into RG — paste_stats_num","text":"","code":"paste_stats_num(VNAME, LABEL = \"STATS\")"},{"path":"/reference/paste_stats_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Statistic of a Numeric Variable into RG — paste_stats_num","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"STATS\"`.","code":""},{"path":"/reference/paste_stats_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Statistic of a Numeric Variable into RG — paste_stats_num","text":"function return value; prints formatted table RG html code","code":""},{"path":"/reference/paste_stats_num.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Statistic of a Numeric Variable into RG — paste_stats_num","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/paste_treemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Graphics of a Factor Variable into RG — paste_treemap","title":"Print Graphics of a Factor Variable into RG — paste_treemap","text":"Read rg_graphics column DGF print treemap RG","code":""},{"path":"/reference/paste_treemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Graphics of a Factor Variable into RG — paste_treemap","text":"","code":"paste_treemap(VNAME, LABEL = \"MOST COMMON VALUES\")"},{"path":"/reference/paste_treemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Graphics of a Factor Variable into RG — paste_treemap","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"COMMON VALUES\"`.","code":""},{"path":"/reference/paste_treemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Graphics of a Factor Variable into RG — paste_treemap","text":"function return value; prints formatted treemap RG","code":""},{"path":"/reference/paste_treemap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Graphics of a Factor Variable into RG — paste_treemap","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/recast_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — recast_factors","title":"FUNCTION_TITLE — recast_factors","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/recast_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — recast_factors","text":"","code":"recast_factors(df)"},{"path":"/reference/recast_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — recast_factors","text":"df PARAM_DESCRIPTION","code":""},{"path":"/reference/recast_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — recast_factors","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/recast_factors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — recast_factors","text":"DETAILS","code":""},{"path":"/reference/recast_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — recast_factors","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/rename_all.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — rename_all","title":"FUNCTION_TITLE — rename_all","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/rename_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — rename_all","text":"","code":"rename_all(df, old, new)"},{"path":"/reference/rename_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — rename_all","text":"df PARAM_DESCRIPTION old PARAM_DESCRIPTION new PARAM_DESCRIPTION","code":""},{"path":"/reference/rename_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — rename_all","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/rename_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — rename_all","text":"DETAILS","code":""},{"path":"/reference/rename_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — rename_all","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/replace_name.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — replace_name","title":"FUNCTION_TITLE — replace_name","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/replace_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — replace_name","text":"","code":"replace_name(nm, x, y)"},{"path":"/reference/replace_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — replace_name","text":"nm PARAM_DESCRIPTION x PARAM_DESCRIPTION y PARAM_DESCRIPTION","code":""},{"path":"/reference/replace_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — replace_name","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/replace_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — replace_name","text":"DETAILS","code":""},{"path":"/reference/replace_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — replace_name","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/save_to_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves DGF to excel — save_to_excel","title":"Saves DGF to excel — save_to_excel","text":"Write DGF excel.","code":""},{"path":"/reference/save_to_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves DGF to excel — save_to_excel","text":"","code":"save_to_excel(df, filename = \"DGF.xlsx\")"},{"path":"/reference/save_to_excel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Saves DGF to excel — save_to_excel","text":"used inside 01-00-CREATE-DGF.R","code":""},{"path":"/reference/show_invalid.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — show_invalid","title":"FUNCTION_TITLE — show_invalid","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/show_invalid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — show_invalid","text":"","code":"show_invalid(v)"},{"path":"/reference/show_invalid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — show_invalid","text":"v PARAM_DESCRIPTION","code":""},{"path":"/reference/show_invalid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — show_invalid","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/show_invalid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — show_invalid","text":"DETAILS","code":""},{"path":"/reference/show_invalid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — show_invalid","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/v_to_wordcloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Graphics of a character Variable into RG — v_to_wordcloud","title":"Print Graphics of a character Variable into RG — v_to_wordcloud","text":"Read rg_graphics column DGF print word cloud RG","code":""},{"path":"/reference/v_to_wordcloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Graphics of a character Variable into RG — v_to_wordcloud","text":"","code":"v_to_wordcloud(VNAME, LABEL = \"WORD CLOUD\")"},{"path":"/reference/v_to_wordcloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Graphics of a character Variable into RG — v_to_wordcloud","text":"VNAME character string specifying name variable whose properties displayed. LABEL character string (layout.TYPE object) section title. Defaults `\"Word Cloud\"`.","code":""},{"path":"/reference/v_to_wordcloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Graphics of a character Variable into RG — v_to_wordcloud","text":"function return value; prints formatted word cloud RG","code":""},{"path":"/reference/v_to_wordcloud.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Graphics of a character Variable into RG — v_to_wordcloud","text":"function internal function `create_div` R/03-01-create-sections.R.","code":""},{"path":"/reference/validate_json.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — validate_json","title":"FUNCTION_TITLE — validate_json","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/validate_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — validate_json","text":"","code":"validate_json(v)"},{"path":"/reference/validate_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — validate_json","text":"v PARAM_DESCRIPTION","code":""},{"path":"/reference/validate_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — validate_json","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/validate_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — validate_json","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/validate_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — validate_json","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"}]
